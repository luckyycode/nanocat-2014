//   *     *
//            `o`_                    **
//         *               *   *    _      *
//               *                 / )
//             *    /\__/\ *       ( (  *
//           ,-.,-.,)    (.,-.,-.,-.) ).,-.,-.
//          | @|  ={      }= | @|  / / | @|o |
//         _j__j__j_)     `-------/ /__j__j__j_
//          ________(               /___________
//          |  | @| \              || o|O | @|
//          |o |  |,'\       ,   ,'"|  |  |  |  hjw
//          vV\|/vV|`-'\  ,---\   | \Vv\hjwVv\//v
//                     _) )    `. \ /
//                    (__/       ) )
//    _   _        _                                _
//   | \ | |  ___ | | __ ___     ___  _ __    __ _ (_) _ __    ___
//   |  \| | / _ \| |/ // _ \   / _ \| '_ \  / _` || || '_ \  / _ \
//   | |\  ||  __/|   <| (_) | |  __/| | | || (_| || || | | ||  __/
//   |_| \_| \___||_|\_\\___/   \___||_| |_| \__, ||_||_| |_| \___|
//                                           |___/
//
//  OpenGL shader used for 2d drawing.
//

#ifdef USE_PRECISION
    precision PRECISION_TYPE float;
#endif


#ifdef _VERTEX_

layout( location = 0 ) in vec3 model_vertexpos;
//layout( location = 1 ) in vec2 model_uvs;

noperspective out vec2 UV;


/***
 **  x, y - scale
 **  z, w - origin
 **/
uniform vec4 scale_origin = vec4( 1.0 );

void main(){
    
    UV = (model_vertexpos.xy + vec2( 1.0, 1.0 )) / 2.0;

    vec4 vPos;
				vPos.x = (model_vertexpos.x * scale_origin.x + scale_origin.z) / HALF_WIDTH - 1.0f;
				vPos.y = 1.0f - (model_vertexpos.y * (1.0-scale_origin.y) + scale_origin.w) / HALF_HEIGHT;
				vPos.z = 0.0f;
				vPos.w = 1.0f;
    
    gl_Position = vPos;// vec4( model_vertexpos, 1.0 );
}

#endif

#ifdef _FRAGMENT_


// Render target texture out.
layout( location = 0 ) out vec4 color;

// Main texture to be used, keep it empty for color apply.
uniform sampler2D quad2Dtex;

// Color.
uniform vec4 colorMod;

// UVs from vertex shader above.
noperspective in vec2 UV;

void main() {
	vec4 tex = texture( quad2Dtex, UV );
    color = colorMod * tex;
    
    if( tex.a < 0.5 )
        discard;
    
    color = colorMod * tex;
}
#endif
